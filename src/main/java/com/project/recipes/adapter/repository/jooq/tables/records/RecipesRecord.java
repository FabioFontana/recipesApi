/*
 * This file is generated by jOOQ.
 */
package com.project.recipes.adapter.repository.jooq.tables.records;


import com.project.recipes.adapter.repository.jooq.tables.Recipes;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipesRecord extends UpdatableRecordImpl<RecipesRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1911340812;

    /**
     * Setter for <code>recipes.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>recipes.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>recipes.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>recipes.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>recipes.INGREDIENTS</code>.
     */
    public void setIngredients(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>recipes.INGREDIENTS</code>.
     */
    public String getIngredients() {
        return (String) get(2);
    }

    /**
     * Setter for <code>recipes.PREPARATION_METHOD</code>.
     */
    public void setPreparationMethod(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>recipes.PREPARATION_METHOD</code>.
     */
    public String getPreparationMethod() {
        return (String) get(3);
    }

    /**
     * Setter for <code>recipes.CATEGORY</code>.
     */
    public void setCategory(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>recipes.CATEGORY</code>.
     */
    public String getCategory() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Recipes.RECIPES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Recipes.RECIPES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Recipes.RECIPES.INGREDIENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Recipes.RECIPES.PREPARATION_METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Recipes.RECIPES.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPreparationMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPreparationMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord value3(String value) {
        setIngredients(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord value4(String value) {
        setPreparationMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord value5(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipesRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecipesRecord
     */
    public RecipesRecord() {
        super(Recipes.RECIPES);
    }

    /**
     * Create a detached, initialised RecipesRecord
     */
    public RecipesRecord(Long id, String name, String ingredients, String preparationMethod, String category) {
        super(Recipes.RECIPES);

        set(0, id);
        set(1, name);
        set(2, ingredients);
        set(3, preparationMethod);
        set(4, category);
    }
}
